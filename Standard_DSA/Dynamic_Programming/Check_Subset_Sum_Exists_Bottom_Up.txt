bool isSubsetSum(vector<int> arr, int sum)
{
        int n = arr.size();

        vector<vector<bool>> dp(n + 1, vector<bool>(sum + 1, false));

        // Initialize the dp table
        for (int i = 0; i <= n; ++i) {
            dp[i][0] = true;  // Sum of 0 can always be achieved with an empty subset
        }

        // Fill the dp table
        for (int i = 1; i <= n; ++i)
        {
            for (int j = 1; j <= sum; ++j)
            {
                if (j < arr[i - 1])
                {
                    dp[i][j] = dp[i - 1][j];  // Can't include the current element
                } 
                else 
                {
                    
                    dp[i][j] = dp[i - 1][j] || dp[i - 1][j - arr[i - 1]];  // Include or exclude the current element
                
                }
            }
        }

        return dp[n][sum];
}