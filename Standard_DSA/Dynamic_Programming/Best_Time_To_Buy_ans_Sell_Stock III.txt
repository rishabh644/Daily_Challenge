int mymaxProfit(vector<int>& prices,int i,int buy,int count,vector<vector<vector<int>>>&dp)
    {
        if(i==prices.size() || count==0)
        return 0;

        if(dp[i][buy][count]!=INT_MIN)
        return dp[i][buy][count];

        if(buy==1)
         dp[i][buy][count]=max(prices[i]+mymaxProfit(prices,i+1,0,count-1,dp),mymaxProfit(prices,i+1,1,count,dp));
        else
         dp[i][buy][count]=max(-prices[i]+mymaxProfit(prices,i+1,1,count,dp),mymaxProfit(prices,i+1,0,count,dp));
    
         return dp[i][buy][count];
    }

    int maxProfit(vector<int>& prices) {
        
     int count=2;

     int buy=0;

     int i=0;
     int n=prices.size();

     vector<vector<vector<int>>>dp(n,vector<vector<int>>(2,vector<int>(3,INT_MIN)));

     return mymaxProfit(prices,i,buy,count,dp);   
       
       
    }