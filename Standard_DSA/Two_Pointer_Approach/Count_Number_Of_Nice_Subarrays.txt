Given an array of integers nums and an integer k. A continuous 
subarray is called nice if there are k odd numbers on it.
Return the number of nice sub-arrays.

Brute Force
class Solution {
public:
    bool nice(vector<int>&nums,int i,int j,int k)
    {
        int count=0;

        for(int m=i;m<=j;m++)
        {
           if(nums[m]%2==1)
           count++;   
        }

        return count==k?true:false;
    }
   
    int numberOfSubarrays(vector<int>& nums, int k) {
        int i,j;
        
        int n=nums.size();
        int count=0;

        for(i=0;i<n;i++)
        {
           for(j=i;j<n;j++)
           {
                if(nice(nums,i,j,k))
                count+=1;
           }
        }

        return count;

    }
};

// Count Number Of Nice Subarrays

class Solution {
public:
    int numberOfSubarrays(vector<int>&nums,int k)
    {

        return atmost(nums,k)-atmost(nums,k-1);
    }
    
   
    int atmost(vector<int>& nums, int k) {
        int i=0;
        int j=0;
        
        int n=nums.size();
        int count=0;
        int len=0;

        int ans=0;

        while(j<n)
        {
            if(nums[j]%2==1)
            {
                count++;
            }
            while(count>k)
            {
                 if(nums[i]%2==1)
                 count-=1;

                 i++;            
            }
            len=j-i+1;
            ans+=len;
            

            j+=1;
        }

        return ans;

    }
};