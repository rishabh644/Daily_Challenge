Given a binary array nums and an integer k, return the maximum number of consecutive 1's in the array if you can flip at most k 0's.

int longestOnes(vector<int>& nums, int k) {
        
        int i=0;
        int j=0;
        int n=nums.size();
        int count0=0;
        int ans=0;
        while(j<n)
        {
            if(nums[j]==0)
            count0++;
            
            while(count0>k)
            {   ans=max(ans,j-i);
                if(nums[i]==0)
                {
                    count0-=1;
                }
                i+=1;
            }
            ans=max(ans,j-i+1);

            j++;
        }

        return ans;

    }

class Solution {
public:
    int longestOnes(vector<int>& nums, int k) {
        
      int i=0,j;

      for(j=0;j<nums.size();++j){
        if(nums[j]==0)k--;
        if(k<0 && nums[i++]==0)k++;
      }
      return j-i;

    }
};