
class Solution:
    def equalSubstring(self, s: str, t: str, maxCost: int) -> int:
        cost_to_change=[0]*len(s)

        for i in range(len(s)):
            cost_to_change[i]=abs(ord(s[i])-ord(t[i]))
        
        sl=0
        fs=0

        cost=0
        mlen=0

        while(fs<len(s)):
            cost+=cost_to_change[fs]

            if(cost>maxCost):
                mlen=max(mlen,fs-sl)
                while(sl<=fs and cost>maxCost):
                    cost-=cost_to_change[sl]
                    sl+=1
            fs+=1
        mlen=max(mlen,fs-sl)
        return mlen
                







        