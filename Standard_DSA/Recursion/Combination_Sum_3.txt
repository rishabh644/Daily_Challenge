Find all valid combinations of k numbers that sum up to n such that the following conditions are true:

Only numbers 1 through 9 are used.
Each number is used at most once.
Return a list of all possible valid combinations. The list must not contain the same combination twice, and the combinations may be returned in any order.

/////////


void mycombination(vector<vector<int>>&ans,vector<int>temp,int i,int k,int n)
{

  if(temp.size()==k && n==0)
  {
    ans.push_back(temp);
    return;
  }
  else if( (temp.size()==k && n!=0) || (i>9) )
  {
   
   return;

  }

  temp.push_back(i);
  mycombination(ans,temp,i+1,k,n-i);

  temp.pop_back();

  mycombination(ans,temp,i+1,k,n);
 

}

class Solution {
public:
    vector<vector<int>> combinationSum3(int k, int n) {
        
      
        vector<vector<int>>ans;

        vector<int>temp;


        int i=1;

        mycombination(ans,temp,i,k,n);
    
        return ans;


    }
};